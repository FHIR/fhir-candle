@page "/index-candle"
@inject NavigationManager NavigationManager
@inject IFhirStoreManager StoreManager
@inject ServerConfiguration ServerConfig

@implements IDisposable

<PageTitle>FHIR Candle</PageTitle>

<MudTable Items="@StoreManager.OrderBy(kvp => kvp.Key)"
        Dense="true"
        Striped="true"
        Height="calc(100vh - (var(--mud-appbar-height) * 2))"
        FixedHeader="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">FHIR Stores</MudText>
        <MudSpacer />
    </ToolBarContent>
    @*<ColGroup>
        <col style="width: 15vw!important;" />
        <col style="width: 15vw!important;" />
        <col style="width: 5vw!important;" />
        <col style="width: 20vw!important;" />
        <col style="width: 45vw!important;" />
    </ColGroup>*@
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Public URL</MudTh>
        <MudTh>Internal URL</MudTh>
        <MudTh>FHIR Version</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudTooltip Text="Local Subscriptions (Send)">
                <MudFab StartIcon="@Icons.Material.Filled.North"
                @onclick="() => NavToLocalSubscriptions(context.Key)"
                        Size="Size.Small" />
            </MudTooltip>

            <MudTooltip Text="Received Notifications">
                <MudFab StartIcon="@Icons.Material.Filled.South"
                @onclick="() => NavToReceivedSubscriptions(context.Key)"
                        Size="Size.Small" />
            </MudTooltip>


            <MudTooltip Text="FHIR Store Contents">
                <MudFab StartIcon="@Icons.Material.Filled.ViewInAr"
                        @onclick="() => NavToFhirStore(context.Key)"
                        Size="Size.Small" />
            </MudTooltip>
        </MudTd>
        <MudTd DataLabel="Public URL">@context.Value.Config.BaseUrl</MudTd>
        <MudTd DataLabel="Internal URL">@($"http://localhost:{ServerConfig.ListenPort}/fhir/{context.Key}")</MudTd>
        <MudTd DataLabel="FHIR Version">@context.Value.Config.FhirVersion</MudTd>
    </RowTemplate>
</MudTable>

@code {
    /// <summary>Gets or sets the navigation tracker.</summary>
    [CascadingParameter]
    public INavTracker? NavTracker { get; set; } = null;

    /// <summary>Executes the initialized asynchronous action.</summary>
    /// <returns>An asynchronous result.</returns>
    protected override void OnInitialized()
    {
        base.OnInitialized();

        NavTracker?.NotifyNav("FHIR Candle", "", 0);
    }

    private void NavToFhirStore(string name)
    {
        NavigationManager.NavigateTo($"/store?store={name}");
    }

    /// <summary>Navigation to local subscriptions.</summary>
    /// <param name="name">The name.</param>
    private void NavToLocalSubscriptions(string name)
    {
        NavigationManager.NavigateTo($"/store/ext/subscriptions-local?store={name}");
    }

    /// <summary>Navigation to received subscriptions.</summary>
    /// <param name="name">The name.</param>
    private void NavToReceivedSubscriptions(string name)
    {
        NavigationManager.NavigateTo($"/store/ext/subscriptions-received?store={name}");
    }

    /// <summary>
    /// Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
    /// resources.
    /// </summary>
    public void Dispose()
    {
    }
}
