@implements IIndexContent

<MudText Typo="Typo.body1">
    As a reference implementation for @ContentFor, this endpoint contains some immutable records for testing:
</MudText>

<MudList>
    <MudListItem Typo="Typo.body1">
        <MudIcon Icon="@Icons.Material.Filled.ArrowRight" Size="Size.Small" />
        <MudLink Href="@($"/store/resource-viewer?store={StoreName}&type=Patient&id=example")"
                    Underline="Underline.Always">Patient/example</MudLink>:
        An example patient, loaded from the FHIR examples.
    </MudListItem>

    <MudListItem>
        <MudIcon Icon="@Icons.Material.Filled.ArrowRight" Size="Size.Small" />
        <MudLink Href="@($"/store/resource-viewer?store={StoreName}&type=Basic&id=encounter-complete")"
                    Underline="Underline.Always">Basic/encounter-complete</MudLink>:
        An example topic as a <code>Basic</code> resource, using cross-version extensions (equivalent
        to the R4B and R5 <code>encounter-complete</code> topics).
        The topic triggers when an encounter is either created with a <code>status</code> of <code>finished</code>
        or updated from any other status to <code>finished</code>.
    </MudListItem>
</MudList>
<br />
<MudText Typo="Typo.body1">
    If you are getting started with topic-based subscriptions, there is a deatiled tour available
    <MudLink Href="@($"/subscriptions/tour?store={StoreName}")" Underline="Underline.Always">here</MudLink>.
</MudText>
<br />
<MudText Typo="Typo.body1">
    If you are building or testing a topic-based subscription server implementation, there is a client available
    <MudLink Href="@($"/subscriptions/client?store={StoreName}")" Underline="Underline.Always">here</MudLink>.
</MudText>
<br />

@code {
    /// <summary>Gets or sets the navigation tracker.</summary>
    [CascadingParameter]
    public INavTracker? NavTracker { get; set; } = null;

    [Parameter]
    public string StoreName { get; set; } = string.Empty;

    /// <summary>Identifies the RI literal this content applies to.</summary>
    public static string ContentFor { get => "subscriptions"; }

    /// <summary>Gets the FHIR version literal.</summary>
    public static string FhirVersionLiteral { get => "R4"; }
}
