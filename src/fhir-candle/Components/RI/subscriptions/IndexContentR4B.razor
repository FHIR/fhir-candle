@using Microsoft.FluentUI.AspNetCore.Components;

@implements IIndexContent

<FluentStack Orientation="Orientation.Vertical" VerticalGap="8">
    <FluentLabel Typo="Typography.Body">
        As a reference implementation for @ContentFor, this endpoint contains some immutable records for testing:
    </FluentLabel>

    <ul>
        <li>
            <FluentAnchor Appearance="Appearance.Hypertext" Href="@($"/store/resource-viewer?store={StoreName}&type=Patient&id=example")">
                Patient/example
            </FluentAnchor>:
            An example patient, loaded from the FHIR examples.
        </li>

        <li>
            <FluentAnchor Appearance="Appearance.Hypertext" Href="@($"/store/resource-viewer?store={StoreName}&type=SubscriptionTopic&id=encounter-complete")">
                SubscriptionTopic/encounter-complete
            </FluentAnchor>:
            An example <code>SubscriptionTopic</code>.
            The topic triggers when an encounter is either created with a <code>status</code> of <code>finished</code>
            or updated from any other status to <code>finished</code>.
        </li>
    </ul>
</FluentStack>

@* <FluentLabel Typo="Typography.Body">
    If you are building or testing a topic-based subscription server implementation, there is a client available
    <FluentAnchor Appearance="Appearance.Hypertext" Href="@($"/subscriptions/client?store={StoreName}")" >here</FluentAnchor>.
</FluentLabel>
<br />
 *@
@code {
    /// <summary>Gets or sets the navigation tracker.</summary>
    [CascadingParameter]
    public INavTracker? NavTracker { get; set; } = null;

    [Parameter]
    public string StoreName { get; set; } = string.Empty;

    /// <summary>Gets or sets the store.</summary>
    [Parameter]
    public IFhirStore Store { get; set; } = null!;

    /// <summary>Identifies the RI literal this content applies to.</summary>
    public static string ContentFor => "subscriptions";

    /// <summary>Gets the FHIR version literal.</summary>
    public static string FhirVersionLiteral => "R4B";

}
