{
  "resourceType": "DocumentReference",
  "id": "pas-episode-summary",
  "meta": {
      "profile": [
          "http://hl7.org/fhir/us/core/StructureDefinition/us-core-documentreference"
      ],
      "tag": [
        {
          "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
          "code": "HTEST",
          "display": "test health data"
        }
      ]
  },
  "identifier": [
      {
          "system": "urn:ietf:rfc:3986",
          "value": "urn:oid:2.16.840.1.113883.19.5.99999.1"
      }
  ],
  "status": "current",
  "type": {
      "coding": [
          {
              "system": "http://loinc.org",
              "code": "34133-9",
              "display": "Summary of episode note"
          }
      ],
      "text": "Summary Of Episode Note"
  },
  "category": [
      {
          "coding": [
              {
                  "system": "http://hl7.org/fhir/us/core/CodeSystem/us-core-documentreference-category",
                  "code": "clinical-note",
                  "display": "Clinical Note"
              }
          ],
          "text": "Clinical Note"
      }
  ],
  "subject": {
      "reference": "Patient/davinci-amy-shaw"
  },
  "date": "2023-08-23T19:06:42.450492-07:00",
  "author": [
      {
          "reference": "Practitioner/davinci-ronald-bone"
      }
  ],
  "content": [
      {
          "attachment": {
              "contentType": "text/xml",
              "data": "Cjw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+PENvbXBvc2l0aW9uIHhtbG5zPSJodHRwOi8vaGw3Lm9yZy9maGlyIj4KICAgIDxpZCB2YWx1ZT0iY2NkLWV4YW1wbGUiLz4KICAgIDx0ZXh0PjxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPjxkaXYgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPjxwPjxiPkdlbmVyYXRlZCBOYXJyYXRpdmUgd2l0aCBEZXRhaWxzPC9iPjwvcD48cD48Yj5pZDwvYj46IGNjZC1leGFtcGxlPC9wPjxwPjxiPmlkZW50aWZpZXI8L2I+OiAxPC9wPjxwPjxiPmRhdGU8L2I+OiAyMy8wNy8yMDIzIDg6MTA6MTQgUE08L3A+PHA+PGI+dHlwZTwvYj46IFN1bW1hcnkgb2YgZXBpc29kZSBub3RlIDxzcGFuPihEZXRhaWxzIDoge0xPSU5DIGNvZGUgJiMzOTszNDEzMy05JiMzOTsgPSAmIzM5O1N1bW1hcnkgb2YgZXBpc29kZSBub3RlJiMzOTssIGdpdmVuIGFzICYjMzk7U3VtbWFyeSBvZiBlcGlzb2RlIG5vdGUmIzM5O30pPC9zcGFuPjwvcD48cD48Yj50aXRsZTwvYj46IENvbnRpbnVpdHkgb2YgQ2FyZSBEb2N1bWVudDwvcD48cD48Yj5zdGF0dXM8L2I+OiBwcmVsaW1pbmFyeTwvcD48cD48Yj5jb25maWRlbnRpYWxpdHk8L2I+OiBOPC9wPjxwPjxiPmF1dGhvcjwvYj46IDxhPkFkYW0gRXZlcnltYW4sIE1EPC9hPjwvcD48aDM+QXR0ZXN0ZXJzPC9oMz48dGFibGU+PHRyPjx0ZD4tPC90ZD48dGQ+PGI+TW9kZTwvYj48L3RkPjx0ZD48Yj5UaW1lPC9iPjwvdGQ+PHRkPjxiPlBhcnR5PC9iPjwvdGQ+PC90cj48dHI+PHRkPio8L3RkPjx0ZD5sZWdhbDwvdGQ+PHRkPjA0LzAxLzIwMTIgODoxMDoxNCBQTTwvdGQ+PHRkPjxhPkFkYW0gRXZlcnltYW4sIE1EPC9hPjwvdGQ+PC90cj48L3RhYmxlPjxwPjxiPmN1c3RvZGlhbjwvYj46IDxhPkNvbW11bml0eSBIZWFsdGggYW5kIEhvc3BpdGFsczwvYT48L3A+PGgzPkV2ZW50czwvaDM+PHRhYmxlPjx0cj48dGQ+LTwvdGQ+PHRkPjxiPkNvZGU8L2I+PC90ZD48dGQ+PGI+UGVyaW9kPC9iPjwvdGQ+PC90cj48dHI+PHRkPio8L3RkPjx0ZD5DYXJlIFByb3Zpc2lvbiA8c3Bhbj4oRGV0YWlscyA6IHtodHRwOi8vaGw3Lm9yZy9maGlyL3YzL0FjdENsYXNzIGNvZGUgJiMzOTtQQ1BSJiMzOTsgPSAmIzM5O2NhcmUgcHJvdmlzaW9uJiMzOTssIGdpdmVuIGFzICYjMzk7Q2FyZSBQcm92aXNpb24mIzM5O30pPC9zcGFuPjwvdGQ+PHRkPjE4LzExLzIwMTUgLS0mZ3Q7IDEyLzEyLzIwMTU8L3RkPjwvdHI+PC90YWJsZT48cD48Yj5lbmNvdW50ZXI8L2I+OiA8YT5odHRwOi8vaGw3Lm9yZy9maGlyL2RhZi1lbmNvdW50ZXI8L2E+PC9wPjwvZGl2PjwvdGV4dD48ZXh0ZW5zaW9uIHVybD0iaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NjZGEtZGF0YS1lbnRlcmVyLWV4dGVuc2lvbiI+CiAgICAgICAgPHZhbHVlVXJpIHZhbHVlPSJodHRwOi8vZmhpcjIuaGVhbHRoaW50ZXJzZWN0aW9ucy5jb20uYXUvb3Blbi9QcmFjdGl0aW9uZXIvMDA5MjkiLz4KICAgIDwvZXh0ZW5zaW9uPgogICAgPGV4dGVuc2lvbiB1cmw9Imh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jY2RhLWluZm9ybWFudC1leHRlbnNpb24iPgogICAgICAgIDx2YWx1ZVVyaSB2YWx1ZT0iaHR0cDovL2ZoaXIyLmhlYWx0aGludGVyc2VjdGlvbnMuY29tLmF1L29wZW4vUHJhY3RpdGlvbmVyLzAwOTI5Ii8+CiAgICA8L2V4dGVuc2lvbj4KICAgIDxleHRlbnNpb24gdXJsPSJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vY2NkYS1pbmZvcm1hdGlvbi1yZWNpcGllbnQtZXh0ZW5zaW9uIj4KICAgICAgICA8dmFsdWVVcmkgdmFsdWU9Imh0dHA6Ly9maGlyMi5oZWFsdGhpbnRlcnNlY3Rpb25zLmNvbS5hdS9vcGVuL1ByYWN0aXRpb25lci8wMDkyOSIvPgogICAgPC9leHRlbnNpb24+CiAgICA8ZXh0ZW5zaW9uIHVybD0iaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NjZGEtcGFydGljaXBhbnQtZXh0ZW5zaW9uIj4KICAgICAgICA8dmFsdWVVcmkgdmFsdWU9Imh0dHA6Ly9maGlyMi5oZWFsdGhpbnRlcnNlY3Rpb25zLmNvbS5hdS9vcGVuL1ByYWN0aXRpb25lci8wMDkyOSIvPgogICAgPC9leHRlbnNpb24+CiAgICA8ZXh0ZW5zaW9uIHVybD0iaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NjZGEtcGVyZm9ybWVyLWV4dGVuc2lvbiI+CiAgICAgICAgPHZhbHVlVXJpIHZhbHVlPSJodHRwOi8vZmhpcjIuaGVhbHRoaW50ZXJzZWN0aW9ucy5jb20uYXUvb3Blbi9QcmFjdGl0aW9uZXIvMDA5MjkiLz4KICAgIDwvZXh0ZW5zaW9uPgogICAgPGV4dGVuc2lvbiB1cmw9Imh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jY2RhLWF1dGhvcml6YXRpb24tZXh0ZW5zaW9uIj4KICAgICAgICA8dmFsdWVVcmkgdmFsdWU9Imh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jY2RhLWNvbnNlbnQiLz4KICAgIDwvZXh0ZW5zaW9uPgogICAgPGlkZW50aWZpZXI+CiAgICAgICAgPHN5c3RlbSB2YWx1ZT0iaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2NjZGEtY2NkLWNvbXBvc2l0aW9uIi8+CiAgICAgICAgPHZhbHVlIHZhbHVlPSIxIi8+CiAgICA8L2lkZW50aWZpZXI+CiAgICA8ZGF0ZSB2YWx1ZT0iMjAyMy0wNy0xNFQwOToxMDoxNFoiLz4KICAgIDx0eXBlPgogICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgIDxzeXN0ZW0gdmFsdWU9Imh0dHA6Ly9sb2luYy5vcmciLz4KICAgICAgICAgICAgPGNvZGUgdmFsdWU9IjM0MTMzLTkiLz4KICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IlN1bW1hcnkgb2YgZXBpc29kZSBub3RlIi8+CiAgICAgICAgPC9jb2Rpbmc+CiAgICA8L3R5cGU+CiAgICA8dGl0bGUgdmFsdWU9IkNvbnRpbnVpdHkgb2YgQ2FyZSBEb2N1bWVudCIvPgogICAgPHN0YXR1cyB2YWx1ZT0icHJlbGltaW5hcnkiLz4KICAgIDxjb25maWRlbnRpYWxpdHkgdmFsdWU9Ik4iLz4KICAgIDxzdWJqZWN0PgogICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9Imh0dHA6Ly9maGlyMi5oZWFsdGhpbnRlcnNlY3Rpb25zLmNvbS5hdS9vcGVuL1BhdGllbnQvMTIzNDU2ODUwMSIvPgogICAgICAgIDxkaXNwbGF5IHZhbHVlPSJIZW5yeSBKb25lcyIvPgogICAgPC9zdWJqZWN0PgogICAgPGF1dGhvcj4KICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSJodHRwOi8vZmhpcjIuaGVhbHRoaW50ZXJzZWN0aW9ucy5jb20uYXUvb3Blbi9QcmFjdGl0aW9uZXIvMDA5MjkiLz4KICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iQWRhbSBFdmVyeW1hbiwgTUQiLz4KICAgIDwvYXV0aG9yPiAKICAgIDxhdHRlc3Rlcj4KICAgICAgICA8bW9kZSB2YWx1ZT0ibGVnYWwiLz4KICAgICAgICA8dGltZSB2YWx1ZT0iMjAyMy0wNy0wNFQwOToxMDoxNFoiLz4KICAgICAgICA8cGFydHk+CiAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9Imh0dHA6Ly9maGlyMi5oZWFsdGhpbnRlcnNlY3Rpb25zLmNvbS5hdS9vcGVuL1ByYWN0aXRpb25lci8wMDkyOSIvPgogICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iQWRhbSBFdmVyeW1hbiwgTUQiLz4KICAgICAgICA8L3BhcnR5PgogICAgPC9hdHRlc3Rlcj4KICAgIDxjdXN0b2RpYW4+CiAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iaHR0cDovL2ZoaXIyLmhlYWx0aGludGVyc2VjdGlvbnMuY29tLmF1L29wZW4vT3JnYW5pemF0aW9uLzU3Ii8+CiAgICAgICAgPGRpc3BsYXkgdmFsdWU9IkNvbW11bml0eSBIZWFsdGggYW5kIEhvc3BpdGFscyIvPgogICAgPC9jdXN0b2RpYW4+CiAgICA8ZXZlbnQ+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vaGw3Lm9yZy9maGlyL3YzL0FjdENsYXNzIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iUENQUiIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IkNhcmUgUHJvdmlzaW9uIi8+CiAgICAgICAgICAgIDwvY29kaW5nPgogICAgICAgIDwvY29kZT4KICAgICAgICA8cGVyaW9kPgogICAgICAgICAgICA8c3RhcnQgdmFsdWU9IjIwMjMtMDctMDciLz4KICAgICAgICAgICAgPGVuZCB2YWx1ZT0iMjAyMy0wNy0wOCIvPgogICAgICAgIDwvcGVyaW9kPgogICAgPC9ldmVudD4KICAgIDxlbmNvdW50ZXI+CiAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iaHR0cDovL2hsNy5vcmcvZmhpci9kYWYtZW5jb3VudGVyIi8+CiAgICA8L2VuY291bnRlcj4KICAgIDwhLS0gICBJbmNsdWRlZCBhbGwgc2VjdGlvbnMgaWRlbnRpZmllZCBpbiB0aGUgVHJpZm9saWEgQy1DREEgb24gRkhJUiBwcm9maWxlIGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9jY2RhLWNjZC1jb21wb3NpdGlvbiAgIC0tPgogICAgPHNlY3Rpb24+CiAgICAgICAgPHRpdGxlIHZhbHVlPSJBbGxlcmdpZXMgYW5kIEludG9sZXJhbmNlcyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iNDg3NjUtMiIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IkFsbGVyZ2llcyBhbmQgYWR2ZXJzZSByZWFjdGlvbnMiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5TdWJzdGFuY2U8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk92ZXJhbGwgU2V2ZXJpdHk8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlJlYWN0aW9uPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5SZWFjdGlvbiBTZXZlcml0eTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+U3RhdHVzPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UGVuaWNpbGxpbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Nb2RlcmF0ZSB0byBTZXZlcmU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TmF1c2VhPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk1pbGQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+SW5hY3RpdmU8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q29kZWluZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5NaWxkPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPldoZWV6aW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk1vZGVyYXRlPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkFjdGl2ZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Bc3BpcmluPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk1pbGQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+SGl2ZXM8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TWlsZCB0byBNb2RlcmF0ZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BY3RpdmU8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICAgICAgPCEtLSAgIENvbXBvc2l0aW9uLnNlY3Rpb24ubW9kZSBhbmQgb3JkZXJlZEJ5IGFyZSBvcHRpb25hbCBpbiBGSElSIERTVFUyLCBhbmQgbm90IHNwZWNpZmllZCBpbiB0aGUgVHJpZm9saWEgQ0NEIENDb0YgcHJvZmlsZSAtIHNob3VsZCBpdCBiZSByZW1vdmVkIGZyb20gdGhlIHNhbXBsZT8gICAgLS0+ICAKICAgICAgICA8bW9kZSB2YWx1ZT0ic25hcHNob3QiLz4KICAgICAgICA8b3JkZXJlZEJ5PgogICAgICAgICAgICA8Y29kaW5nPgogICAgICAgICAgICAgICAgPHN5c3RlbSB2YWx1ZT0iaHR0cDovL2hsNy5vcmcvZmhpci9saXN0LW9yZGVyIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iZXZlbnQtZGF0ZSIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IlNvcnRlZCBieSBFdmVudCBEYXRlIi8+CiAgICAgICAgICAgIDwvY29kaW5nPgogICAgICAgIDwvb3JkZXJlZEJ5PgogICAgPC9zZWN0aW9uPgogICAgPHNlY3Rpb24+CiAgICAgICAgPHRpdGxlIHZhbHVlPSJNZWRpY2F0aW9uIFNlY3Rpb24iLz4KICAgICAgICA8Y29kZT4KICAgICAgICAgICAgPGNvZGluZz4KICAgICAgICAgICAgICAgIDxzeXN0ZW0gdmFsdWU9Imh0dHA6Ly9sb2luYy5vcmciLz4KICAgICAgICAgICAgICAgIDxjb2RlIHZhbHVlPSIxMDE2MC0wIi8+CiAgICAgICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iSGlzdG9yeSBvZiBNZWRpY2F0aW9uIFVzZSIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk1lZGljYXRpb248L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkRpcmVjdGlvbnM8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlN0YXJ0IERhdGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlN0YXR1czwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+SW5kaWNhdGlvbnM8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkZpbGwgSW5zdHJ1Y3Rpb25zPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UHJvdmVudGlsIEhGQTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5JbmhhbGFudCBzb2x1dGlvbiAtIDIgcHVmZnMgUUlEIFBSTiB3aGVlemluZzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDE1MTAyOTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BY3RpdmU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UG5ldW1vbmlhPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkdlbmVyaWMgc3Vic3RpdHV0aW9uIGFsbG93ZWQ8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IlByb2JsZW0gU2VjdGlvbiIvPgogICAgICAgIDxjb2RlPgogICAgICAgICAgICA8Y29kaW5nPgogICAgICAgICAgICAgICAgPHN5c3RlbSB2YWx1ZT0iaHR0cDovL2xvaW5jLm9yZyIvPgogICAgICAgICAgICAgICAgPGNvZGUgdmFsdWU9IjExNDUwLTQiLz4KICAgICAgICAgICAgICAgIDxkaXNwbGF5IHZhbHVlPSJQcm9ibGVtIGxpc3QiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5Qcm9ibGVtIE5hbWU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlR5cGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk9uc2V0IERhdGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkFiYXRlbWVudCBEYXRlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5TdGF0dXM8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5QbmV1bW9uaWE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+RGlhZ25vc2lzPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMTUtMTAtMjk8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjAxNi0wMS0xNTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Db21wbGV0ZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Bc3RobWE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q29uZGl0aW9uPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMDAtMDItMTU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQvPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+QWN0aXZlPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZXh0PgogICAgPC9zZWN0aW9uPgogICAgPHNlY3Rpb24+CiAgICAgICAgPHRpdGxlIHZhbHVlPSJQcm9jZWR1cmVzIFNlY3Rpb24iLz4KICAgICAgICA8Y29kZT4KICAgICAgICAgICAgPGNvZGluZz4KICAgICAgICAgICAgICAgIDxzeXN0ZW0gdmFsdWU9Imh0dHA6Ly9sb2luYy5vcmciLz4KICAgICAgICAgICAgICAgIDxjb2RlIHZhbHVlPSI0NzUxOS00Ii8+CiAgICAgICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iSGlzdG9yeSBvZiBwcm9jZWR1cmVzIi8+CiAgICAgICAgICAgIDwvY29kaW5nPgogICAgICAgIDwvY29kZT4KICAgICAgICA8dGV4dD4KICAgICAgICAgICAgPHN0YXR1cyB2YWx1ZT0iZ2VuZXJhdGVkIi8+CiAgICAgICAgICAgIDxkaXYgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgogICAgICAgICAgICAgICAgPHRhYmxlPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+UHJvY2VkdXJlIE5hbWU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkJvZHkgU2l0ZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+UGVyZm9ybWVyPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5EYXRlIFBlcmZvcm1lZDwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkx1bWJhciBTcGluYWwgRnVzaW9uPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkJhY2sgUmVnaW9uPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkRyLiBTLiBTdGVlbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDE1MDgxNjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdGV4dD4KICAgIDwvc2VjdGlvbj4KICAgIDxzZWN0aW9uPgogICAgICAgIDx0aXRsZSB2YWx1ZT0iUmVzdWx0cyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iMzA5NTQtMiIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IlJlbGV2YW50IGRpYWdub3N0aWMgdGVzdHMgYW5kIGxhYm9yYXRvcnkgZGF0YSIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlJlc3VsdCBUeXBlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5RdWFudGl0eSBWYWx1ZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+RGF0ZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+U3RhdHVzPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Qmxvb2QgQ2hlbWlzdHJ5IC0gRm9sYXRlIGluIFJlZCBCbG9vZCBDZWxsczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xMy44IHVnPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMjMvMDIvMDE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UHJlbGltaW5hcnk8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IkFkdmFuY2UgRGlyZWN0aXZlcyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iNDIzNDgtMyIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IkFkdmFuY2UgZGlyZWN0aXZlcyIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk5hbWU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkFwcGxpZXMgUGVyaW9kPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UmVzdXNjaXRhdGlvbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDIzLzAxLzAxIC0gMjAyMy8xMi8zMTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdGV4dD4KICAgIDwvc2VjdGlvbj4KICAgIDxzZWN0aW9uPgogICAgICAgIDx0aXRsZSB2YWx1ZT0iRW5jb3VudGVycyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iNDYyNDAtOCIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IkVuY291bnRlcnMiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5FbmNvdW50ZXI8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlBlcmZvcm1lcjwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+TG9jYXRpb248L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkRhdGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5DaGVja3VwIEV4YW1pbmF0aW9uPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkRyLiBTLiBTdGVlbmU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q29tbXVuaXR5IFVyZ2VudCBDYXJlIENlbnRlcjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDIzLzA5LzI2PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZXh0PgogICAgPC9zZWN0aW9uPgogICAgPHNlY3Rpb24+CiAgICAgICAgPHRpdGxlIHZhbHVlPSJGYW1pbHkgSGlzdG9yeSBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iMTAxNTctNiIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9Ikhpc3Rvcnkgb2YgZmFtaWx5IG1lbWJlciBkaXNlYXNlcyIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlJlbGF0aW9uc2hpcDwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+RGlhZ25vc2lzPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5BZ2UgYXQgT25zZXQ8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5GYXRoZXI8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TXlvY2FyZGlhbCBJbmZhcmN0aW9uKGNhdXNlIG9mIERlYXRoKTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD41NzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5GYXRoZXI8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+RGlhYmV0ZXM8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NDA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IkZ1bmN0aW9uYWwgU3RhdHVzIFNlY3Rpb24iLz4KICAgICAgICA8Y29kZT4KICAgICAgICAgICAgPGNvZGluZz4KICAgICAgICAgICAgICAgIDxzeXN0ZW0gdmFsdWU9Imh0dHA6Ly9sb2luYy5vcmciLz4KICAgICAgICAgICAgICAgIDxjb2RlIHZhbHVlPSI0NzQyMC01Ii8+CiAgICAgICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iRnVuY3Rpb25hbCBzdGF0dXMgYXNzZXNzbWVudCIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkZ1bmN0aW9uYWwgb3IgQ29nbml0aXZlIEZpbmRpbmc8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk9ic2VydmF0aW9uPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5PYnNlcnZhdGlvbiBEYXRlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5Db25kaXRpb24gU3RhdHVzPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+QW1idWxhdGlvbiAoRGVwZW5kZW50IHRvIEluZGVwZW5kZW50PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkluZGVwZW5kZW50bHkgYWJsZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDEwLzAzLzExPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkFjdGl2ZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5GaW5kaW5nIG9mIEZ1bmN0aW9uYWwgUGVyZm9ybWFuY2UgYW5kIEFjdGl2aXR5PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkR5c3BuZWE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjAwOC8wMi8xNjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BY3RpdmU8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q29nbml0aXZlIEZ1bmN0aW9uIEZpbmRpbmc8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TWVtb3J5IEltcGFpcm1lbnQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjAxNC8wNC8yOTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BY3RpdmU8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IkltbXVuaXphdGlvbnMgU2VjdGlvbiIvPgogICAgICAgIDxjb2RlPgogICAgICAgICAgICA8Y29kaW5nPgogICAgICAgICAgICAgICAgPHN5c3RlbSB2YWx1ZT0iaHR0cDovL2xvaW5jLm9yZyIvPgogICAgICAgICAgICAgICAgPGNvZGUgdmFsdWU9IjExMzY5LTYiLz4KICAgICAgICAgICAgICAgIDxkaXNwbGF5IHZhbHVlPSJIaXN0b3J5IG9mIGltbXVuaXphdGlvbiIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlZhY2NpbmU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkRhdGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlN0YXR1czwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkluZmx1ZW56YSwgU2Vhc29uYWwsIElNPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjE5OTkvMTEvMjU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q29tcGxldGVkPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlRldGFudXMgYW5kIGRpcHRoZXJpYSB0b3hvaWRzLCBJTTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xOTk3LzEwLzE2PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlJlZnVzZWQ8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IiBOdXRyaXRpb24gU2VjdGlvbiIvPgogICAgICAgIDxjb2RlPgogICAgICAgICAgICA8Y29kaW5nPgogICAgICAgICAgICAgICAgPHN5c3RlbSB2YWx1ZT0iaHR0cDovL2xvaW5jLm9yZyIvPgogICAgICAgICAgICAgICAgPGNvZGUgdmFsdWU9IjYxMTQ0LTIiLz4KICAgICAgICAgICAgICAgIDxkaXNwbGF5IHZhbHVlPSJEaWV0IGFuZCBudXRyaXRpb24iLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5EYXRlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5OdXRyaXRpb25hbCBTdGF0dXM8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkRpZXQ8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDA1LzEyLzI5PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPldlbGwgbm91cmlzaGVkPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkxvdyBzb2RpdW0gZGlldCwgZXhjZXNzaXZlIGNhcmJvaHlkcmF0ZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDEwLzA1LzI2PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlNsaWdodCBkZWh5ZHJhdGlvbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5IaWdoIHByb3RlaW4sIGxvdyBmaWJyZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdGV4dD4KICAgIDwvc2VjdGlvbj4KICAgIDxzZWN0aW9uPgogICAgICAgIDx0aXRsZSB2YWx1ZT0iTWVudGFsIFN0YXR1cyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iMTAxOTAtNyIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9Ik1lbnRhbCBzdGF0dXMiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5EYXRlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5NZW50YWwgU3RhdHVzPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5TdXBwb3J0IFN5c3RlbTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMDUvMDYvMjE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+R29vZDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Ob3QgcmVxdWlyZWQ8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjAyMy8xMi8yOTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5EaW1lbnRpYTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5EYWlseSBIb21lIENhcmU8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IlNvY2lhbCBIaXN0b3J5IFNlY3Rpb24iLz4KICAgICAgICA8Y29kZT4KICAgICAgICAgICAgPGNvZGluZz4KICAgICAgICAgICAgICAgIDxzeXN0ZW0gdmFsdWU9Imh0dHA6Ly9sb2luYy5vcmciLz4KICAgICAgICAgICAgICAgIDxjb2RlIHZhbHVlPSIyOTc2Mi0yIi8+CiAgICAgICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iU29jaWFsIGhpc3RvcnkiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5Tb2NpYWwgSGlzdG9yeSBFbGVtZW50PC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5EZXNjcmlwdGlvbjwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+RWZmZWN0aXZlIERhdGVzPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+U21va2luZzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xIHBhY2sgcGVyIGRheTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDA1LzA1LzAxIC0gMjAxMC8wMi8yODwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BbGNvaG9sIENvbnN1bXB0aW9uPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIgQm90dGxlcyBvZiBXaW5lIHBlciB3ZWVrPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMDEvMDEvMDE8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IlBsYW4gb2YgVHJlYXRtZW50IFNlY3Rpb24iLz4KICAgICAgICA8Y29kZT4KICAgICAgICAgICAgPGNvZGluZz4KICAgICAgICAgICAgICAgIDxzeXN0ZW0gdmFsdWU9Imh0dHA6Ly9sb2luYy5vcmciLz4KICAgICAgICAgICAgICAgIDxjb2RlIHZhbHVlPSIxODc3Ni01Ii8+CiAgICAgICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iUGxhbiBvZiB0cmVhdG1lbnQiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5QbGFubmVkIEFjdGl2aXR5PC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5QZXJpb2Q8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlN0YXR1czwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkNvbG9ub3Njb3B5PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMTAvMDgvMTYgLSAyMDEwLzA4LzE2PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkNvbXBsZXRlZDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SZWNvbW1lbmRhdGlvbiB0byBFeGVyY2lzZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDIzLzEwLzI5PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk9uZ29pbmc8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RleHQ+CiAgICA8L3NlY3Rpb24+CiAgICA8c2VjdGlvbj4KICAgICAgICA8dGl0bGUgdmFsdWU9IlBheWVycyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iNDg3NjgtNiIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9IlBheWVycyIvPgogICAgICAgICAgICA8L2NvZGluZz4KICAgICAgICA8L2NvZGU+CiAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDxzdGF0dXMgdmFsdWU9ImdlbmVyYXRlZCIvPgogICAgICAgICAgICA8ZGl2IHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KICAgICAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlBheWVyIE5hbWU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPlBvbGljeSBJRDwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+UG9saWN5IEhvbGRlcjwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlVuaXRlZCBIZWFsdGhjYXJlPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjEyMzQxPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlNlbGY8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q2lnbmE8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+NTMxMjM8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+U3BvdXNlPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZXh0PgogICAgPC9zZWN0aW9uPgogICAgPHNlY3Rpb24+CiAgICAgICAgPHRpdGxlIHZhbHVlPSJNZWRpY2FsIEVxdWlwbWVudCBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iNDYyNjQtOCIvPgogICAgICAgICAgICAgICAgPGRpc3BsYXkgdmFsdWU9Ik1lZGljYWwgZXF1aXBtZW50Ii8+CiAgICAgICAgICAgIDwvY29kaW5nPgogICAgICAgIDwvY29kZT4KICAgICAgICA8dGV4dD4KICAgICAgICAgICAgPHN0YXR1cyB2YWx1ZT0iZ2VuZXJhdGVkIi8+CiAgICAgICAgICAgIDxkaXYgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgogICAgICAgICAgICAgICAgPHRhYmxlPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+U3VwcGx5L0RldmljZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+RGF0ZSBTdXBwbGllZDwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkF1dG9tYXRpYyBJbXBsYW50YWJsZSBjYXJkaW92ZXJ0ZXIvZGVmYnJpbGxhdG9yPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMDgvMTEvMTY8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+V2hlZWxjaGFpcjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xOTk5LzEyLzAxPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZXh0PgogICAgPC9zZWN0aW9uPgogICAgPHNlY3Rpb24+CiAgICAgICAgPHRpdGxlIHZhbHVlPSJWaXRhbCBTaWducyBTZWN0aW9uIi8+CiAgICAgICAgPGNvZGU+CiAgICAgICAgICAgIDxjb2Rpbmc+CiAgICAgICAgICAgICAgICA8c3lzdGVtIHZhbHVlPSJodHRwOi8vbG9pbmMub3JnIi8+CiAgICAgICAgICAgICAgICA8Y29kZSB2YWx1ZT0iODcxNi0zIi8+CiAgICAgICAgICAgICAgICA8ZGlzcGxheSB2YWx1ZT0iVml0YWwgc2lnbnMiLz4KICAgICAgICAgICAgPC9jb2Rpbmc+CiAgICAgICAgPC9jb2RlPgogICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8c3RhdHVzIHZhbHVlPSJnZW5lcmF0ZWQiLz4KICAgICAgICAgICAgPGRpdiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5WaXRhbCBTaWduPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5EYXRlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5WYWx1ZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkhlaWdodDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDExLzAxLzEzPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjE3NyBjbTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5XZWlnaHQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+MjAxMS8wMS8xMzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD44NiBrZzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5CbG9vZCBQcmVzc3VyZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4yMDExLzAxLzEzPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjEzMi84NiBtbUhnPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZXh0PgogICAgPC9zZWN0aW9uPgo8L0NvbXBvc2l0aW9uPg==",
              "title": "CCD",
              "creation": "2023-08-22"
          }
      }
  ]
}